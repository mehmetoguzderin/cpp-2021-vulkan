#version 460 core
#extension GL_EXT_buffer_reference2 : require
#extension GL_EXT_nonuniform_qualifier : enable
#extension GL_EXT_scalar_block_layout : enable
#extension GL_EXT_shader_atomic_int64 : require
#extension GL_EXT_shader_explicit_arithmetic_types_int8 : enable
#extension GL_EXT_shader_explicit_arithmetic_types_int16 : enable
#extension GL_EXT_shader_explicit_arithmetic_types_int32 : enable
#extension GL_EXT_shader_explicit_arithmetic_types_int64 : enable
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#extension GL_EXT_shader_explicit_arithmetic_types_float32 : enable
#extension GL_EXT_shader_explicit_arithmetic_types_float64 : enable
#extension GL_GOOGLE_include_directive : enable

layout(set = 0, binding = 0) buffer StorageBuffer {
  uint32_t data[];
}
storageBuffer;

layout(set = 0, binding = 1) uniform UniformBuffer {
  uint32_t data;
}
uniformBuffer;

layout(local_size_x = 8, local_size_y = 1, local_size_z = 1) in;
void main() {
  if (gl_GlobalInvocationID.x > 0)
    return;
  storageBuffer.data[0] = uniformBuffer.data << 1;
}